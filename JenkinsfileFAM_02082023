pipeline {        // CP to vim JenkinsfileFAM and git push
    agent {
        label 'maven'   // previosly it was agent  any
    }                   
    tools {
        maven 'maven-latest'
    }
    stages {
        stage('build') {
            steps {
                sh "mvn --version"
                sh "mvn clean package"   // G: maven life cycle.  Choose 'package'.  it will validate, compile, test and package
            }
            
            post {
                success {
                    echo "My build is successful"
                }
                failure {
                    echo "My Build is failed"
                }
                always {
                    echo "I am always"  // display this regardless success or failure
                }

            } // post ends

        }  // stage 1 ends
        

        // ---=======================--- cd part  added this later ---================================-
        stage('Upload') {
            steps {
                sh "jfrog"
            }
        }
        // =======================================================================================
        

        stage('Report') {
            steps {
                sh "mvn clean test surefire-report:report-only"   //   this is the command
            }
            
            post {
                success {
                    junit allowEmptyResults: true, testResults: 'target/surefire-reports/*.xml'
                    publishHTML([allowMissing: true, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site', reportFiles: 'surefire-report.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                }  /// got this publish from pipeline syntax
            }                
            
        }  // stage 2 ends

        
        stage('Sonar Analysis') {
            steps {
                sh "mvn sonar:sonar"
            }
        }// stage 3 (sonar) ends

        
        // stage('Static Analysis') {
        //     steps {
        //         "hp fortity, AquaSec, Coverity, Sonarscan" //  to make srue that compnay is not using NON LIcenses to avoid sue
        //     }
        // }
        stage('Deploy to Dev') {
            steps {
                sshagent(['project-a-dev-ssh-key']) {  //// follow notes  cd part  step 3
                    sh "scp -o StrictHostKeyChecking=no target/my-app-1.0-SNAPSHOT.jar ec2-user@172.31.2.127:/tmp"  // .jar is the soruce you get from  build console output. And target is the tgt VM priate ip
                }                       // for adding parameter,  G  ssh ignore host key.  you get -o and add it as a param
            }
        }

        



    } // end all stage
 
}// pipeline ends



// this is the update of the first jenkins file with  agent label maven (sanme name described in agent 0 node in jenkins)
// . we are using master node to run jenkins and using agent 0 node to run maven test only...

// testing webhook...

// adding CD part
